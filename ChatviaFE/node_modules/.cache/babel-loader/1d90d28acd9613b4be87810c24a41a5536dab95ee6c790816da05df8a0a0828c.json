{"ast":null,"code":"// src/redux/store.js\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers'; // Import root reducer\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas'; // Import root saga\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware)\n});\n\n// Run root saga\nsagaMiddleware.run(rootSaga);\n\n// Export the store as default\nexport default store;\n\n// Optionally, if you want to export configureStore, do it like this\n// export { configureStore };","map":{"version":3,"names":["configureStore","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","store","reducer","middleware","getDefaultMiddleware","concat","run"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/redux/store.js"],"sourcesContent":["// src/redux/store.js\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './reducers'; // Import root reducer\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas'; // Import root saga\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => \r\n        getDefaultMiddleware().concat(sagaMiddleware),\r\n});\r\n\r\n// Run root saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\n// Export the store as default\r\nexport default store;\r\n\r\n// Optionally, if you want to export configureStore, do it like this\r\n// export { configureStore };\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,YAAY,CAAC,CAAC;AACtC,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,QAAQ,MAAM,SAAS,CAAC,CAAC;;AAEhC,MAAMC,cAAc,GAAGF,oBAAoB,CAAC,CAAC;AAE7C,MAAMG,KAAK,GAAGL,cAAc,CAAC;EACzBM,OAAO,EAAEL,WAAW;EACpBM,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACL,cAAc;AACpD,CAAC,CAAC;;AAEF;AACAA,cAAc,CAACM,GAAG,CAACP,QAAQ,CAAC;;AAE5B;AACA,eAAeE,KAAK;;AAEpB;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}