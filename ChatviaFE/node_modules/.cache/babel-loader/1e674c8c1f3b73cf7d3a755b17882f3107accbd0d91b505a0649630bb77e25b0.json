{"ast":null,"code":"// src/redux/auth/saga.js\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { loginUserSuccess, apiError, logoutUserSuccess } from './actions';\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER } from './constants';\n\n// API login\nfunction* login({\n  payload: {\n    userName,\n    passwordHash,\n    navigate\n  }\n}) {\n  try {\n    const response = yield call(fetch, 'https://localhost:7266/api/User/test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName,\n        passwordHash\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = yield response.json();\n    console.log(\"Token nhận được:\", data); // In token nhận được\n\n    // Lưu token vào cookie với thời gian hết hạn 29 phút (29 * 60 giây)\n    document.cookie = `token=${data.token}; path=/; max-age=${29 * 60}`;\n    // Dispatch action thành công nếu cần\n    yield put(loginUserSuccess(data.token));\n    navigate('/dashboard');\n  } catch (error) {\n    console.error(\"Lỗi khi đăng nhập:\", error.message);\n  }\n}\nfunction* register({\n  payload: {\n    userName,\n    passwordHash,\n    email,\n    navigate\n  }\n}) {\n  try {\n    const response = yield call(fetch, 'https://localhost:7266/api/User/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userName,\n        passwordHash,\n        email\n      })\n    });\n    let data;\n    if (!response.ok) {\n      // Nếu có lỗi, lấy JSON và hiển thị message\n      const errorData = yield response.json();\n      console.error(\"Lỗi khi đăng ký:\", errorData.message); // In ra thông điệp lỗi từ backend\n      // throw new Error(errorData.message); // Ném lỗi để xử lý trong catch (nếu có)\n    } else {\n      // Nếu phản hồi thành công, lấy dữ liệu JSON\n      data = yield response.json();\n      console.log(\"Message nhận được:\", data); // In ra token nhận được nếu thành công\n\n      // THỰC HIỆN ĐĂNG NHẬP\n\n      yield call(login, {\n        payload: {\n          userName,\n          passwordHash,\n          navigate\n        }\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nfunction* logout({\n  payload: {\n    navigate\n  }\n}) {\n  try {\n    // Xóa token trong cookie\n    document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\"; // Xóa cookie token\n    localStorage.removeItem(\"authUser\"); // Xóa thông tin người dùng trong localStorage\n\n    // Dispatch action logout thành công\n    yield put(logoutUserSuccess(true));\n\n    // Điều hướng đến trang login\n    navigate('/login');\n  } catch (error) {\n    console.error(\"Lỗi khi logout:\", error);\n  }\n}\n\n// src/sagas/authSaga.js\n\nexport function* watchLogoutUser() {\n  yield takeEvery(LOGOUT_USER, logout);\n}\nexport function* watchLoginUser() {\n  yield takeEvery(LOGIN_USER, login);\n}\nexport function* watchRegisterUser() {\n  yield takeEvery(REGISTER_USER, register);\n}\nexport default function* authSaga() {\n  yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser)]);\n}","map":{"version":3,"names":["all","call","fork","put","takeEvery","axios","loginUserSuccess","apiError","logoutUserSuccess","LOGIN_USER","LOGOUT_USER","REGISTER_USER","login","payload","userName","passwordHash","navigate","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","document","cookie","token","error","message","register","email","errorData","logout","localStorage","removeItem","watchLogoutUser","watchLoginUser","watchRegisterUser","authSaga"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/redux/auth/saga.js"],"sourcesContent":["// src/redux/auth/saga.js\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { loginUserSuccess, apiError, logoutUserSuccess } from './actions';\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER } from './constants';\r\n\r\n\r\n\r\n// API login\r\nfunction* login({ payload: { userName, passwordHash, navigate } }) {\r\n    \r\n    try {\r\n        const response = yield call(fetch, 'https://localhost:7266/api/User/test', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userName, passwordHash }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = yield response.json();\r\n        console.log(\"Token nhận được:\", data); // In token nhận được\r\n\r\n        // Lưu token vào cookie với thời gian hết hạn 29 phút (29 * 60 giây)\r\n        document.cookie = `token=${data.token}; path=/; max-age=${29 * 60}`;\r\n        // Dispatch action thành công nếu cần\r\n        yield put(loginUserSuccess(data.token));\r\n\r\n        navigate('/dashboard');\r\n    } catch (error) {\r\n        console.error(\"Lỗi khi đăng nhập:\", error.message);\r\n        \r\n    }\r\n}\r\n\r\n\r\nfunction* register({ payload: { userName, passwordHash, email, navigate } }) {\r\n    \r\n    try {\r\n\r\n        const response = yield call(fetch, 'https://localhost:7266/api/User/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ userName, passwordHash, email }),\r\n        });\r\n\r\n        let data;\r\n        if (!response.ok) {\r\n            // Nếu có lỗi, lấy JSON và hiển thị message\r\n            const errorData = yield response.json();\r\n            console.error(\"Lỗi khi đăng ký:\", errorData.message); // In ra thông điệp lỗi từ backend\r\n            // throw new Error(errorData.message); // Ném lỗi để xử lý trong catch (nếu có)\r\n        } else {\r\n            // Nếu phản hồi thành công, lấy dữ liệu JSON\r\n            data = yield response.json();\r\n            console.log(\"Message nhận được:\", data); // In ra token nhận được nếu thành công\r\n\r\n\r\n            // THỰC HIỆN ĐĂNG NHẬP\r\n\r\n            yield call(login, { payload: { userName, passwordHash, navigate } });\r\n        }\r\n\r\n    \r\n\r\n\r\n    }catch(error){\r\n\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* logout({ payload: { navigate } }) {\r\n    try {\r\n        // Xóa token trong cookie\r\n        document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\"; // Xóa cookie token\r\n        localStorage.removeItem(\"authUser\"); // Xóa thông tin người dùng trong localStorage\r\n\r\n        // Dispatch action logout thành công\r\n        yield put(logoutUserSuccess(true));\r\n        \r\n        // Điều hướng đến trang login\r\n        navigate('/login');\r\n    } catch (error) {\r\n        console.error(\"Lỗi khi logout:\", error);\r\n    }\r\n}\r\n\r\n\r\n// src/sagas/authSaga.js\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport default function* authSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser)\r\n    ]);\r\n}"],"mappings":"AAAA;AACA,SAASA,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,QAAQ,EAAEC,iBAAiB,QAAQ,WAAW;AACzE,SAASC,UAAU,EAAEC,WAAW,EAAEC,aAAa,QAAQ,aAAa;;AAIpE;AACA,UAAUC,KAAKA,CAAC;EAAEC,OAAO,EAAE;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAS;AAAE,CAAC,EAAE;EAE/D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMhB,IAAI,CAACiB,KAAK,EAAE,sCAAsC,EAAE;MACvEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,QAAQ;QAAEC;MAAa,CAAC;IACnD,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;IAC7D;IACA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC,CAAC,CAAC;;IAEvC;IACAI,QAAQ,CAACC,MAAM,GAAI,SAAQL,IAAI,CAACM,KAAM,qBAAoB,EAAE,GAAG,EAAG,EAAC;IACnE;IACA,MAAM9B,GAAG,CAACG,gBAAgB,CAACqB,IAAI,CAACM,KAAK,CAAC,CAAC;IAEvCjB,QAAQ,CAAC,YAAY,CAAC;EAC1B,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACC,OAAO,CAAC;EAEtD;AACJ;AAGA,UAAUC,QAAQA,CAAC;EAAEvB,OAAO,EAAE;IAAEC,QAAQ;IAAEC,YAAY;IAAEsB,KAAK;IAAErB;EAAS;AAAE,CAAC,EAAE;EAEzE,IAAI;IAEA,MAAMC,QAAQ,GAAG,MAAMhB,IAAI,CAACiB,KAAK,EAAE,0CAA0C,EAAE;MAC3EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,QAAQ;QAAEC,YAAY;QAAEsB;MAAM,CAAC;IAC1D,CAAC,CAAC;IAEF,IAAIV,IAAI;IACR,IAAI,CAACV,QAAQ,CAACO,EAAE,EAAE;MACd;MACA,MAAMc,SAAS,GAAG,MAAMrB,QAAQ,CAACW,IAAI,CAAC,CAAC;MACvCC,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAEI,SAAS,CAACH,OAAO,CAAC,CAAC,CAAC;MACtD;IACJ,CAAC,MAAM;MACH;MACAR,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,IAAI,CAAC,CAAC,CAAC;;MAGzC;;MAEA,MAAM1B,IAAI,CAACW,KAAK,EAAE;QAAEC,OAAO,EAAE;UAAEC,QAAQ;UAAEC,YAAY;UAAEC;QAAS;MAAE,CAAC,CAAC;IACxE;EAKJ,CAAC,QAAMkB,KAAK,EAAC;IAETL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACtB;AACJ;AAIA,UAAUK,MAAMA,CAAC;EAAE1B,OAAO,EAAE;IAAEG;EAAS;AAAE,CAAC,EAAE;EACxC,IAAI;IACA;IACAe,QAAQ,CAACC,MAAM,GAAG,wDAAwD,CAAC,CAAC;IAC5EQ,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;;IAErC;IACA,MAAMtC,GAAG,CAACK,iBAAiB,CAAC,IAAI,CAAC,CAAC;;IAElC;IACAQ,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EAC3C;AACJ;;AAGA;;AAOA,OAAO,UAAUQ,eAAeA,CAAA,EAAG;EAC/B,MAAMtC,SAAS,CAACM,WAAW,EAAE6B,MAAM,CAAC;AACxC;AAEA,OAAO,UAAUI,cAAcA,CAAA,EAAG;EAC9B,MAAMvC,SAAS,CAACK,UAAU,EAAEG,KAAK,CAAC;AACtC;AACA,OAAO,UAAUgC,iBAAiBA,CAAA,EAAG;EACjC,MAAMxC,SAAS,CAACO,aAAa,EAAEyB,QAAQ,CAAC;AAC5C;AAEA,eAAe,UAAUS,QAAQA,CAAA,EAAG;EAChC,MAAM7C,GAAG,CAAC,CACNE,IAAI,CAACyC,cAAc,CAAC,EACpBzC,IAAI,CAACwC,eAAe,CAAC,EACrBxC,IAAI,CAAC0C,iBAAiB,CAAC,CAC1B,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}