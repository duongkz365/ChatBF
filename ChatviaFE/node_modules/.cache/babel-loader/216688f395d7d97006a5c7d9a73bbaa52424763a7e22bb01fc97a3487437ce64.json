{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ChatBF\\\\ChatviaFE\\\\src\\\\routes\\\\SignalRContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SignalRContext.js\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport * as signalR from \"@microsoft/signalr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignalRContext = /*#__PURE__*/createContext();\nexport const useSignalR = () => {\n  _s();\n  return useContext(SignalRContext);\n};\n_s(useSignalR, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SignalRProvider = ({\n  children\n}) => {\n  _s2();\n  const [connection, setConnection] = useState(null);\n  useEffect(() => {\n    const newConnection = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:7098/chathub\") // Thay URL của bạn vào đây\n    .withAutomaticReconnect().build();\n    setConnection(newConnection);\n    newConnection.start().then(() => console.log(\"Connect SignalR Success!!\")).catch(err => console.error(\"Connect SignalR Fail!:\", err));\n    return () => {\n      newConnection.stop();\n    };\n  }, []);\n  const sendUserId = async userId => {\n    if (connection) {\n      try {\n        await connection.invoke(\"StoreUserId\", userId);\n        console.log(\"Send UserId Success:\", userId);\n      } catch (err) {\n        console.error(\"Send UserId Fail:\", err);\n      }\n    }\n  };\n  const onEvent = (eventName, callback) => {\n    if (connection) {\n      connection.on(eventName, callback);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(SignalRContext.Provider, {\n    value: {\n      connection,\n      sendUserId,\n      onEvent\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s2(SignalRProvider, \"0zrM3Z2qcAsIAygoKW672o4jWrA=\");\n_c = SignalRProvider;\nvar _c;\n$RefreshReg$(_c, \"SignalRProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","signalR","jsxDEV","_jsxDEV","SignalRContext","useSignalR","_s","SignalRProvider","children","_s2","connection","setConnection","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","console","log","catch","err","error","stop","sendUserId","userId","invoke","onEvent","eventName","callback","on","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/routes/SignalRContext.js"],"sourcesContent":["// SignalRContext.js\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\nconst SignalRContext = createContext();\r\n\r\nexport const useSignalR = () => useContext(SignalRContext);\r\n\r\nexport const SignalRProvider = ({ children }) => {\r\n    const [connection, setConnection] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const newConnection = new signalR.HubConnectionBuilder()\r\n            .withUrl(\"https://localhost:7098/chathub\") // Thay URL của bạn vào đây\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n        setConnection(newConnection);\r\n\r\n        newConnection.start()\r\n            .then(() => console.log(\"Connect SignalR Success!!\"))\r\n            .catch(err => console.error(\"Connect SignalR Fail!:\", err));\r\n\r\n        return () => {\r\n            newConnection.stop();\r\n        };\r\n    }, []);\r\n\r\n\r\n    const sendUserId = async (userId) => {\r\n        if (connection) {\r\n            try {\r\n                await connection.invoke(\"StoreUserId\", userId);\r\n                console.log(\"Send UserId Success:\", userId);\r\n            } catch (err) {\r\n                console.error(\"Send UserId Fail:\", err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onEvent = (eventName, callback) => {\r\n        if (connection) {\r\n            connection.on(eventName, callback);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SignalRContext.Provider value={{connection, sendUserId, onEvent}}>\r\n            {children}\r\n        </SignalRContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,gBAAGP,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMQ,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,cAAc,CAAC;AAAA;AAACE,EAAA,CAA9CD,UAAU;AAEvB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMa,aAAa,GAAG,IAAIX,OAAO,CAACY,oBAAoB,CAAC,CAAC,CACnDC,OAAO,CAAC,gCAAgC,CAAC,CAAC;IAAA,CAC1CC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAEZL,aAAa,CAACC,aAAa,CAAC;IAE5BA,aAAa,CAACK,KAAK,CAAC,CAAC,CAChBC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CACpDC,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC,CAAC;IAE/D,OAAO,MAAM;MACTV,aAAa,CAACY,IAAI,CAAC,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,UAAU,GAAG,MAAOC,MAAM,IAAK;IACjC,IAAIhB,UAAU,EAAE;MACZ,IAAI;QACA,MAAMA,UAAU,CAACiB,MAAM,CAAC,aAAa,EAAED,MAAM,CAAC;QAC9CP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,MAAM,CAAC;MAC/C,CAAC,CAAC,OAAOJ,GAAG,EAAE;QACVH,OAAO,CAACI,KAAK,CAAC,mBAAmB,EAAED,GAAG,CAAC;MAC3C;IACJ;EACJ,CAAC;EAED,MAAMM,OAAO,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;IACrC,IAAIpB,UAAU,EAAE;MACZA,UAAU,CAACqB,EAAE,CAACF,SAAS,EAAEC,QAAQ,CAAC;IACtC;EACJ,CAAC;EAED,oBACI3B,OAAA,CAACC,cAAc,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAACvB,UAAU;MAAEe,UAAU;MAAEG;IAAO,CAAE;IAAApB,QAAA,EAC7DA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAC5B,GAAA,CA3CWF,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}