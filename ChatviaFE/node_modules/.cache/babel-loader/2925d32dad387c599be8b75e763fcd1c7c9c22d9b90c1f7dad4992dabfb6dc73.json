{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateTraceDirections = calculateTraceDirections;\nvar _types = require(\"../types\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction calculateTraceDirections() {\n  var trace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var ticks = [];\n  var positive = _types.TraceDirectionKey.POSITIVE;\n  var negative = _types.TraceDirectionKey.NEGATIVE;\n  var i = 0;\n  var tick = [];\n  var direction = _types.TraceDirectionKey.NONE;\n  for (; i < trace.length; i++) {\n    var current = trace[i];\n    var prev = trace[i - 1];\n    if (tick.length) {\n      var currentDirection = current > prev ? positive : negative;\n      if (direction === _types.TraceDirectionKey.NONE) {\n        direction = currentDirection;\n      }\n      if (currentDirection === direction) {\n        tick.push(current);\n      } else {\n        ticks.push(_defineProperty({}, direction, tick.slice()));\n        tick = [];\n        tick.push(current);\n        direction = currentDirection;\n      }\n    } else {\n      if (current !== 0) {\n        direction = current > 0 ? positive : negative;\n      }\n      tick.push(current);\n    }\n  }\n  if (tick.length) {\n    ticks.push(_defineProperty({}, direction, tick));\n  }\n  return ticks;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}