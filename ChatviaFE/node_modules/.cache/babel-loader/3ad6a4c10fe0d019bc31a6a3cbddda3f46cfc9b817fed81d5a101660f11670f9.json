{"ast":null,"code":"import axios from 'axios';\nimport config from \"./../config\";\n\n// default\naxios.defaults.baseURL = config.API_URL;\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// intercepting to capture errors\naxios.interceptors.response.use(function (response) {\n  return response.data ? response.data : response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  let message;\n  switch (error.status) {\n    case 500:\n      message = 'Internal Server Error';\n      break;\n    case 401:\n      message = 'Invalid credentials';\n      break;\n    case 404:\n      message = \"Sorry! the data you are looking for could not be found\";\n      break;\n    default:\n      message = error.message || error;\n  }\n  return Promise.reject(message);\n});\n\n/**\n * Sets the default authorization\n * @param {*} token \n */\nconst setAuthorization = token => {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n};\nclass APIClient {\n  constructor() {\n    /**\n     * Fetches data from given url\n     */\n    this.get = (url, params) => {\n      return axios.get(url, params);\n    };\n    /**\n     * post given data to url\n     */\n    this.create = (url, data) => {\n      return axios.post(url, data);\n    };\n    /**\n     * Updates data\n     */\n    this.update = (url, data) => {\n      return axios.patch(url, data);\n    };\n    /**\n     * Delete \n     */\n    this.delete = url => {\n      return axios.put(url);\n    };\n  }\n}\nexport { APIClient, setAuthorization };","map":{"version":3,"names":["axios","config","defaults","baseURL","API_URL","headers","post","interceptors","response","use","data","error","message","status","Promise","reject","setAuthorization","token","common","APIClient","constructor","get","url","params","create","update","patch","delete","put"],"sources":["C:/Users/Administrator/Desktop/Chatvia_React_v2.3.0/Chatvia/src/helpers/apiClient.js"],"sourcesContent":["import axios from 'axios';\nimport config from \"./../config\";\n\n\n// default\naxios.defaults.baseURL = config.API_URL;\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// intercepting to capture errors\naxios.interceptors.response.use(function (response) {\n    return response.data ? response.data : response;\n}, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    let message;\n    switch (error.status) {\n        case 500: message = 'Internal Server Error'; break;\n        case 401: message = 'Invalid credentials'; break;\n        case 404: message = \"Sorry! the data you are looking for could not be found\"; break;\n        default: message = error.message || error;\n    }\n    return Promise.reject(message);\n});\n\n/**\n * Sets the default authorization\n * @param {*} token \n */\nconst setAuthorization = (token) => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n\n\nclass APIClient {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        return axios.get(url, params);\n    }\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    }\n\n    /**\n     * Updates data\n     */\n    update = (url, data) => {\n        return axios.patch(url, data);\n    }\n\n    /**\n     * Delete \n     */\n    delete = (url) => {\n        return axios.put(url);\n    }\n}\n\nexport { APIClient, setAuthorization };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,aAAa;;AAGhC;AACAD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAGF,MAAM,CAACG,OAAO;;AAEvC;AACAJ,KAAK,CAACE,QAAQ,CAACG,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;;AAEhE;AACAN,KAAK,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAUD,QAAQ,EAAE;EAChD,OAAOA,QAAQ,CAACE,IAAI,GAAGF,QAAQ,CAACE,IAAI,GAAGF,QAAQ;AACnD,CAAC,EAAE,UAAUG,KAAK,EAAE;EAChB;EACA,IAAIC,OAAO;EACX,QAAQD,KAAK,CAACE,MAAM;IAChB,KAAK,GAAG;MAAED,OAAO,GAAG,uBAAuB;MAAE;IAC7C,KAAK,GAAG;MAAEA,OAAO,GAAG,qBAAqB;MAAE;IAC3C,KAAK,GAAG;MAAEA,OAAO,GAAG,wDAAwD;MAAE;IAC9E;MAASA,OAAO,GAAGD,KAAK,CAACC,OAAO,IAAID,KAAK;EAC7C;EACA,OAAOG,OAAO,CAACC,MAAM,CAACH,OAAO,CAAC;AAClC,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA,MAAMI,gBAAgB,GAAIC,KAAK,IAAK;EAChCjB,KAAK,CAACE,QAAQ,CAACG,OAAO,CAACa,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGD,KAAK;AACtE,CAAC;AAGD,MAAME,SAAS,CAAC;EAAAC,YAAA;IACZ;AACJ;AACA;IAFI,KAGAC,GAAG,GAAG,CAACC,GAAG,EAAEC,MAAM,KAAK;MACnB,OAAOvB,KAAK,CAACqB,GAAG,CAACC,GAAG,EAAEC,MAAM,CAAC;IACjC,CAAC;IAED;AACJ;AACA;IAFI,KAGAC,MAAM,GAAG,CAACF,GAAG,EAAEZ,IAAI,KAAK;MACpB,OAAOV,KAAK,CAACM,IAAI,CAACgB,GAAG,EAAEZ,IAAI,CAAC;IAChC,CAAC;IAED;AACJ;AACA;IAFI,KAGAe,MAAM,GAAG,CAACH,GAAG,EAAEZ,IAAI,KAAK;MACpB,OAAOV,KAAK,CAAC0B,KAAK,CAACJ,GAAG,EAAEZ,IAAI,CAAC;IACjC,CAAC;IAED;AACJ;AACA;IAFI,KAGAiB,MAAM,GAAIL,GAAG,IAAK;MACd,OAAOtB,KAAK,CAAC4B,GAAG,CAACN,GAAG,CAAC;IACzB,CAAC;EAAA;AACL;AAEA,SAASH,SAAS,EAAEH,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}