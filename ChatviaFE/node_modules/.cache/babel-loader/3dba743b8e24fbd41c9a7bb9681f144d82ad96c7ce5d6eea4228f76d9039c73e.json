{"ast":null,"code":"// src/redux/message/saga.js\n\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { FETCH_MESSAGE_REQUEST, COPY_MESSAGE_REQUEST, SAVE_MESSAGE_REQUEST, FORWARD_MESSAGE_REQUEST, DELETE_MESSAGE_REQUEST, SEND_MESSAGE_REQUEST, SEEN_MESSAGE_REQUEST, SEND_FILE_REQUEST } from '../actionTypes';\nimport { fetchMessageSuccess, fetchMessageFailure, copyMessageSuccess, copyMessageFailure, saveMessageSuccess, saveMessageFailure, forwardMessageSuccess, forwardMessageFailure, deleteMessageSuccess, deleteMessageFailure, fetchMessageRequest, sendFileFailure, sendFileSuccess } from './actions';\nimport { getCookie } from '../actionTypes';\nfunction* fetchMessages() {\n  try {\n    const response = yield call(fetch, 'https://localhost:7098/api/Message/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getCookie(\"token\")}`\n      },\n      body: JSON.stringify()\n    });\n    const data = yield response.json();\n    yield console.log(\"Mesage data: \", data);\n    yield put(fetchMessageSuccess(data));\n  } catch (e) {\n    yield put(fetchMessageFailure(e.message));\n  }\n}\nfunction* copyMessage(action) {\n  try {\n    // Giả sử API trả về thành công\n    yield put(copyMessageSuccess(action.payload));\n  } catch (error) {\n    yield put(copyMessageFailure(error.message));\n  }\n}\nfunction* saveMessage(action) {\n  try {\n    yield put(saveMessageSuccess(action.payload));\n  } catch (error) {\n    yield put(saveMessageFailure(error.message));\n  }\n}\nfunction* forwardMessage(action) {\n  try {\n    yield put(forwardMessageSuccess(action.payload));\n  } catch (error) {\n    yield put(forwardMessageFailure(error.message));\n  }\n}\nfunction* deleteMessage(action) {\n  try {\n    yield put(deleteMessageSuccess(action.payload));\n  } catch (error) {\n    yield put(deleteMessageFailure(error.message));\n  }\n}\nfunction* sendMessage({\n  payload: {\n    receiverId,\n    messageType,\n    content,\n    mediaUrl,\n    isGroupMessage\n  }\n}) {\n  const token = getCookie(\"token\");\n  try {\n    if (messageType === \"text\") {\n      const response = yield call(fetch, \"https://localhost:7098/api/Message/sendtext\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          token,\n          receiverId,\n          isGroupMessage,\n          content\n        })\n      });\n      if (!response.ok) {\n        console.log(\"NOT OF\");\n      }\n      yield put({\n        type: \"FETCH_MESSAGE_REQUEST\"\n      });\n    } else if (messageType === \"file\") {\n      yield console.log(mediaUrl);\n    } else {}\n  } catch (e) {}\n}\nfunction* sendFileSaga(action) {\n  console.log(\"send fiel sagea\");\n  try {\n    const {\n      receiver,\n      file,\n      isgroup\n    } = action.payload;\n    yield console.log(\"token: \", receiver);\n    // const response = yield call(fetch, 'YOUR_API_ENDPOINT/sendfile', {\n    //     method: 'POST',\n    //     body: action.payload, // Sử dụng FormData\n    // });\n\n    // const data = yield response.json();\n\n    // if (response.ok) {\n    //     yield put({ type: SEND_FILE_SUCCESS, payload: data });\n    // } else {\n    //     yield put({ type: SEND_FILE_FAILURE, payload: data });\n    // }\n  } catch (error) {\n    // yield put({ type: SEND_FILE_FAILURE, payload: error.message });\n  }\n}\nfunction* seenMessage({\n  payload: {\n    otherId\n  }\n}) {\n  yield console.log(\"Seen Message: \", otherId);\n}\nexport function* watchMessageActions() {\n  yield takeLatest(FETCH_MESSAGE_REQUEST, fetchMessages);\n  yield takeLatest(COPY_MESSAGE_REQUEST, copyMessage);\n  yield takeLatest(SAVE_MESSAGE_REQUEST, saveMessage);\n  yield takeLatest(FORWARD_MESSAGE_REQUEST, forwardMessage);\n  yield takeLatest(DELETE_MESSAGE_REQUEST, deleteMessage);\n  yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\n  yield takeLatest(SEEN_MESSAGE_REQUEST, seenMessage);\n  yield takeLatest(SEND_FILE_REQUEST, sendFileSaga);\n}","map":{"version":3,"names":["call","put","takeLatest","FETCH_MESSAGE_REQUEST","COPY_MESSAGE_REQUEST","SAVE_MESSAGE_REQUEST","FORWARD_MESSAGE_REQUEST","DELETE_MESSAGE_REQUEST","SEND_MESSAGE_REQUEST","SEEN_MESSAGE_REQUEST","SEND_FILE_REQUEST","fetchMessageSuccess","fetchMessageFailure","copyMessageSuccess","copyMessageFailure","saveMessageSuccess","saveMessageFailure","forwardMessageSuccess","forwardMessageFailure","deleteMessageSuccess","deleteMessageFailure","fetchMessageRequest","sendFileFailure","sendFileSuccess","getCookie","fetchMessages","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","console","log","e","message","copyMessage","action","payload","error","saveMessage","forwardMessage","deleteMessage","sendMessage","receiverId","messageType","content","mediaUrl","isGroupMessage","token","ok","type","sendFileSaga","receiver","file","isgroup","seenMessage","otherId","watchMessageActions"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/redux/message/sagas.js"],"sourcesContent":["// src/redux/message/saga.js\r\n\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    FETCH_MESSAGE_REQUEST,\r\n    COPY_MESSAGE_REQUEST,\r\n    SAVE_MESSAGE_REQUEST,\r\n    FORWARD_MESSAGE_REQUEST,\r\n    DELETE_MESSAGE_REQUEST,\r\n    SEND_MESSAGE_REQUEST,\r\n    SEEN_MESSAGE_REQUEST,\r\n    SEND_FILE_REQUEST,\r\n} from '../actionTypes';\r\nimport {\r\n    fetchMessageSuccess,\r\n    fetchMessageFailure,\r\n    copyMessageSuccess,\r\n    copyMessageFailure,\r\n    saveMessageSuccess,\r\n    saveMessageFailure,\r\n    forwardMessageSuccess,\r\n    forwardMessageFailure,\r\n    deleteMessageSuccess,\r\n    deleteMessageFailure,\r\n    fetchMessageRequest,\r\n    sendFileFailure,\r\n    sendFileSuccess\r\n} from './actions';\r\n\r\nimport { getCookie } from '../actionTypes';\r\n\r\nfunction* fetchMessages() {\r\n    try {\r\n    const response = yield call(fetch, 'https://localhost:7098/api/Message/', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${getCookie(\"token\")}`,\r\n        },\r\n        body: JSON.stringify(),\r\n    });\r\n\r\n    const data = yield response.json();\r\n\r\n   yield console.log(\"Mesage data: \",data)\r\n    yield put(fetchMessageSuccess(data));\r\n  }catch(e){\r\n    yield put(fetchMessageFailure(e.message));\r\n  }\r\n}\r\n\r\nfunction* copyMessage(action) {\r\n    try {\r\n        // Giả sử API trả về thành công\r\n        yield put(copyMessageSuccess(action.payload));\r\n    } catch (error) {\r\n        yield put(copyMessageFailure(error.message));\r\n    }\r\n}\r\n\r\nfunction* saveMessage(action) {\r\n    try {\r\n        yield put(saveMessageSuccess(action.payload));\r\n    } catch (error) {\r\n        yield put(saveMessageFailure(error.message));\r\n    }\r\n}\r\n\r\nfunction* forwardMessage(action) {\r\n    try {\r\n        yield put(forwardMessageSuccess(action.payload));\r\n    } catch (error) {\r\n        yield put(forwardMessageFailure(error.message));\r\n    }\r\n}\r\n\r\nfunction* deleteMessage(action) {\r\n    try {\r\n        yield put(deleteMessageSuccess(action.payload));\r\n    } catch (error) {\r\n        yield put(deleteMessageFailure(error.message));\r\n    }\r\n}\r\n\r\nfunction* sendMessage({payload: { receiverId, messageType, content, mediaUrl, isGroupMessage}}){\r\n    \r\n    const token = getCookie(\"token\");\r\n\r\n    try {\r\n        if(messageType === \"text\"){\r\n            const response = yield call(\r\n                fetch,\r\n                \"https://localhost:7098/api/Message/sendtext\",\r\n                {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({token,  receiverId, isGroupMessage,content }),\r\n                }\r\n              );\r\n\r\n              if(!response.ok){\r\n                console.log(\"NOT OF\")\r\n              }\r\n              yield put({ type: \"FETCH_MESSAGE_REQUEST\" });\r\n        }else if(messageType === \"file\"){\r\n\r\n\r\n            yield console.log(mediaUrl)\r\n        }else {\r\n\r\n        }\r\n    }catch(e){\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction* sendFileSaga(action) {\r\n\r\n    console.log(\"send fiel sagea\")\r\n    try {\r\n\r\n        const {  receiver, file, isgroup } = action.payload;\r\n        yield console.log(\"token: \", receiver)\r\n        // const response = yield call(fetch, 'YOUR_API_ENDPOINT/sendfile', {\r\n        //     method: 'POST',\r\n        //     body: action.payload, // Sử dụng FormData\r\n        // });\r\n\r\n        // const data = yield response.json();\r\n\r\n        // if (response.ok) {\r\n        //     yield put({ type: SEND_FILE_SUCCESS, payload: data });\r\n        // } else {\r\n        //     yield put({ type: SEND_FILE_FAILURE, payload: data });\r\n        // }\r\n    } catch (error) {\r\n        // yield put({ type: SEND_FILE_FAILURE, payload: error.message });\r\n    }\r\n}\r\n\r\nfunction* seenMessage({payload: {otherId}}){\r\n    yield console.log(\"Seen Message: \", otherId)\r\n}\r\n\r\n\r\n\r\n\r\nexport function* watchMessageActions() {\r\n    yield takeLatest(FETCH_MESSAGE_REQUEST, fetchMessages);\r\n    yield takeLatest(COPY_MESSAGE_REQUEST, copyMessage);\r\n    yield takeLatest(SAVE_MESSAGE_REQUEST, saveMessage);\r\n    yield takeLatest(FORWARD_MESSAGE_REQUEST, forwardMessage);\r\n    yield takeLatest(DELETE_MESSAGE_REQUEST, deleteMessage);\r\n    yield takeLatest(SEND_MESSAGE_REQUEST, sendMessage);\r\n    yield takeLatest(SEEN_MESSAGE_REQUEST, seenMessage);\r\n    yield takeLatest(SEND_FILE_REQUEST,sendFileSaga);\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}