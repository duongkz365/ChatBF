{"ast":null,"code":"import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationGr from './locales/gr/translation.json';\nimport translationIT from './locales/it/translation.json';\nimport translationSP from './locales/sp/translation.json';\nimport translationRS from './locales/rs/translation.json';\nimport translationENG from './locales/en/translation.json';\n\n//translations\nconst resources = {\n  gr: {\n    translation: translationGr\n  },\n  it: {\n    translation: translationIT\n  },\n  sp: {\n    translation: translationSP\n  },\n  rs: {\n    translation: translationRS\n  },\n  eng: {\n    translation: translationENG\n  }\n};\ni18n.use(detector).use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  resources,\n  lng: \"en\",\n  fallbackLng: \"en\",\n  // use en if detected lng is not available\n\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n\n  interpolation: {\n    escapeValue: false // react already safes from xss\n  }\n});\n\nexport default i18n;","map":{"version":3,"names":["i18n","detector","initReactI18next","translationGr","translationIT","translationSP","translationRS","translationENG","resources","gr","translation","it","sp","rs","eng","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"sources":["C:/Users/Administrator/Desktop/Chatvia_React_v2.3.0/Chatvia/src/i18n.js"],"sourcesContent":["import i18n from \"i18next\";\r\nimport detector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next  } from \"react-i18next\";\r\n\r\nimport translationGr from './locales/gr/translation.json';\r\nimport translationIT from './locales/it/translation.json';\r\nimport translationSP from './locales/sp/translation.json';\r\nimport translationRS from './locales/rs/translation.json';\r\nimport translationENG from './locales/en/translation.json';\r\n\r\n//translations\r\nconst resources = {\r\n    gr: {\r\n        translation: translationGr\r\n    },\r\n    it: {\r\n        translation: translationIT\r\n    },\r\n    sp: {\r\n        translation: translationSP\r\n    },\r\n    rs: {\r\n        translation: translationRS\r\n    },\r\n    eng: {\r\n        translation: translationENG\r\n    }\r\n};\r\n\r\ni18n\r\n    .use(detector)\r\n    .use(initReactI18next ) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: \"en\",\r\n        fallbackLng: \"en\", // use en if detected lng is not available\r\n\r\n        keySeparator: false, // we do not use keys in form messages.welcome\r\n\r\n        interpolation: {\r\n        escapeValue: false // react already safes from xss\r\n        }\r\n    });\r\n\r\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SAASC,gBAAgB,QAAS,eAAe;AAEjD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,cAAc,MAAM,+BAA+B;;AAE1D;AACA,MAAMC,SAAS,GAAG;EACdC,EAAE,EAAE;IACAC,WAAW,EAAEP;EACjB,CAAC;EACDQ,EAAE,EAAE;IACAD,WAAW,EAAEN;EACjB,CAAC;EACDQ,EAAE,EAAE;IACAF,WAAW,EAAEL;EACjB,CAAC;EACDQ,EAAE,EAAE;IACAH,WAAW,EAAEJ;EACjB,CAAC;EACDQ,GAAG,EAAE;IACDJ,WAAW,EAAEH;EACjB;AACJ,CAAC;AAEDP,IAAI,CACCe,GAAG,CAACd,QAAQ,CAAC,CACbc,GAAG,CAACb,gBAAiB,CAAC,CAAC;AAAA,CACvBc,IAAI,CAAC;EACFR,SAAS;EACTS,GAAG,EAAE,IAAI;EACTC,WAAW,EAAE,IAAI;EAAE;;EAEnBC,YAAY,EAAE,KAAK;EAAE;;EAErBC,aAAa,EAAE;IACfC,WAAW,EAAE,KAAK,CAAC;EACnB;AACJ,CAAC,CAAC;;AAEN,eAAerB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}