{"ast":null,"code":"import { all, call, fork, takeEvery } from \"redux-saga/effects\";\nimport { SET_LAYOUT_MODE } from \"./constants\";\n\n/**\n * Changes the body attribute\n */\nfunction changeBodyAttribute(attribute, value) {\n  if (document.body) document.body.setAttribute(attribute, value);\n  return true;\n}\n\n/**\n * Changes the layout mode\n * @param {*} param0\n */\nfunction* changelayoutMode({\n  payload: layoutMode\n}) {\n  try {\n    if (layoutMode === \"light\") {\n      yield call(changeBodyAttribute, \"data-bs-theme\", layoutMode);\n      localStorage.setItem(\"layoutMode\", layoutMode);\n    } else if (layoutMode === \"dark\") {\n      yield call(changeBodyAttribute, \"data-bs-theme\", layoutMode);\n      localStorage.setItem(\"layoutMode\", layoutMode);\n    }\n  } catch (error) {}\n}\n\n/**\n * Watchers\n */\nexport function* watchChangelayoutMode() {\n  yield takeEvery(SET_LAYOUT_MODE, changelayoutMode);\n}\nfunction* LayoutSaga() {\n  yield all([fork(watchChangelayoutMode)]);\n}\n_c = LayoutSaga;\nexport default LayoutSaga;\nvar _c;\n$RefreshReg$(_c, \"LayoutSaga\");","map":{"version":3,"names":["all","call","fork","takeEvery","SET_LAYOUT_MODE","changeBodyAttribute","attribute","value","document","body","setAttribute","changelayoutMode","payload","layoutMode","localStorage","setItem","error","watchChangelayoutMode","LayoutSaga","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/redux/layout/saga.js"],"sourcesContent":["// @flow\nimport { all, call, fork, takeEvery } from \"redux-saga/effects\";\n\nimport { SET_LAYOUT_MODE } from \"./constants\";\n\n/**\n * Changes the body attribute\n */\nfunction changeBodyAttribute(attribute, value) {\n  if (document.body) document.body.setAttribute(attribute, value);\n  return true;\n}\n\n/**\n * Changes the layout mode\n * @param {*} param0\n */\n function* changelayoutMode({ payload:  layoutMode  }) {\n  try {\n    if (layoutMode === \"light\") {\n      yield call(changeBodyAttribute, \"data-bs-theme\", layoutMode);\n      localStorage.setItem(\"layoutMode\", layoutMode);\n    } else if (layoutMode === \"dark\") {\n      yield call(changeBodyAttribute, \"data-bs-theme\", layoutMode);\n      localStorage.setItem(\"layoutMode\", layoutMode);\n    }\n  } catch (error) { }\n}\n\n/**\n * Watchers\n */\nexport function* watchChangelayoutMode() {\n  yield takeEvery(SET_LAYOUT_MODE, changelayoutMode);\n}\n\nfunction* LayoutSaga() {\n  yield all([\n    fork(watchChangelayoutMode),\n  ]);\n}\n\nexport default LayoutSaga;\n"],"mappings":"AACA,SAASA,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,QAAQ,oBAAoB;AAE/D,SAASC,eAAe,QAAQ,aAAa;;AAE7C;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EAC7C,IAAIC,QAAQ,CAACC,IAAI,EAAED,QAAQ,CAACC,IAAI,CAACC,YAAY,CAACJ,SAAS,EAAEC,KAAK,CAAC;EAC/D,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACC,UAAUI,gBAAgBA,CAAC;EAAEC,OAAO,EAAGC;AAAY,CAAC,EAAE;EACrD,IAAI;IACF,IAAIA,UAAU,KAAK,OAAO,EAAE;MAC1B,MAAMZ,IAAI,CAACI,mBAAmB,EAAE,eAAe,EAAEQ,UAAU,CAAC;MAC5DC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,UAAU,CAAC;IAChD,CAAC,MAAM,IAAIA,UAAU,KAAK,MAAM,EAAE;MAChC,MAAMZ,IAAI,CAACI,mBAAmB,EAAE,eAAe,EAAEQ,UAAU,CAAC;MAC5DC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,UAAU,CAAC;IAChD;EACF,CAAC,CAAC,OAAOG,KAAK,EAAE,CAAE;AACpB;;AAEA;AACA;AACA;AACA,OAAO,UAAUC,qBAAqBA,CAAA,EAAG;EACvC,MAAMd,SAAS,CAACC,eAAe,EAAEO,gBAAgB,CAAC;AACpD;AAEA,UAAUO,UAAUA,CAAA,EAAG;EACrB,MAAMlB,GAAG,CAAC,CACRE,IAAI,CAACe,qBAAqB,CAAC,CAC5B,CAAC;AACJ;AAACE,EAAA,GAJSD,UAAU;AAMpB,eAAeA,UAAU;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}