{"ast":null,"code":"import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { APIClient } from '../../helpers/apiClient';\nimport { getFirebaseBackend } from \"../../helpers/firebase\";\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\nimport { loginUserSuccess, registerUserSuccess, forgetPasswordSuccess, apiError, logoutUserSuccess } from './actions';\n\n//Initilize firebase\nconst fireBaseBackend = getFirebaseBackend();\n\n/**\r\n * Sets the session\r\n * @param {*} user \r\n */\n\nconst create = new APIClient().create;\n\n/**\r\n * Login the user\r\n * @param {*} payload - username and password \r\n */\nfunction* login({\n  payload: {\n    username,\n    password,\n    history\n  }\n}) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.loginUser, username, password);\n      yield put(loginUserSuccess(response));\n    } else {\n      const response = yield call(create, '/login', {\n        username,\n        password\n      });\n      localStorage.setItem(\"authUser\", JSON.stringify(response));\n      yield put(loginUserSuccess(response));\n    }\n    history('/dashboard');\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\n/**\r\n * Logout the user\r\n * @param {*} param0 \r\n */\nfunction* logout({\n  payload: {\n    history\n  }\n}) {\n  try {\n    localStorage.removeItem(\"authUser\");\n    if (process.env.REACT_APP_DEFAULTAUTH === 'firebase') {\n      yield call(fireBaseBackend.logout);\n    }\n    yield put(logoutUserSuccess(true));\n  } catch (error) {}\n}\n\n/**\r\n * Register the user\r\n */\nfunction* register({\n  payload: {\n    user\n  }\n}) {\n  try {\n    const email = user.email;\n    const password = user.password;\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.registerUser, email, password);\n      yield put(registerUserSuccess(response));\n    } else {\n      const response = yield call(create, '/register', user);\n      yield put(registerUserSuccess(response));\n    }\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\n\n/**\r\n * forget password\r\n */\nfunction* forgetPassword({\n  payload: {\n    email\n  }\n}) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.forgetPassword, email);\n      if (response) {\n        yield put(forgetPasswordSuccess(\"Reset link are sended to your mailbox, check there first\"));\n      }\n    } else {\n      const response = yield call(create, '/forget-pwd', {\n        email\n      });\n      yield put(forgetPasswordSuccess(response));\n    }\n  } catch (error) {\n    yield put(apiError(error));\n  }\n}\nexport function* watchLoginUser() {\n  yield takeEvery(LOGIN_USER, login);\n}\nexport function* watchLogoutUser() {\n  yield takeEvery(LOGOUT_USER, logout);\n}\nexport function* watchRegisterUser() {\n  yield takeEvery(REGISTER_USER, register);\n}\nexport function* watchForgetPassword() {\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\n}\nfunction* authSaga() {\n  yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\n}\nexport default authSaga;","map":{"version":3,"names":["all","call","fork","put","takeEvery","APIClient","getFirebaseBackend","LOGIN_USER","LOGOUT_USER","REGISTER_USER","FORGET_PASSWORD","loginUserSuccess","registerUserSuccess","forgetPasswordSuccess","apiError","logoutUserSuccess","fireBaseBackend","create","login","payload","username","password","history","process","env","REACT_APP_DEFAULTAUTH","response","loginUser","localStorage","setItem","JSON","stringify","error","logout","removeItem","register","user","email","registerUser","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/redux/auth/saga.js"],"sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { APIClient } from '../../helpers/apiClient';\r\nimport { getFirebaseBackend } from \"../../helpers/firebase\";\r\n\r\n\r\nimport {\r\n    LOGIN_USER,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    FORGET_PASSWORD\r\n} from './constants';\r\n\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    registerUserSuccess,\r\n    forgetPasswordSuccess,\r\n    apiError,\r\n    logoutUserSuccess\r\n} from './actions';\r\n\r\n\r\n//Initilize firebase\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user \r\n */\r\n\r\nconst create = new APIClient().create;\r\n\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password \r\n */\r\nfunction* login({ payload: { username, password, history } }) {\r\n    try {\r\n        if(process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n            const response = yield call(fireBaseBackend.loginUser, username, password);\r\n            yield put(loginUserSuccess(response));\r\n            \r\n        } else {\r\n            const response = yield call(create, '/login', { username, password });\r\n            localStorage.setItem(\"authUser\", JSON.stringify(response));\r\n            yield put(loginUserSuccess(response));\r\n           \r\n            \r\n        }\r\n        history('/dashboard');\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0 \r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        localStorage.removeItem(\"authUser\");\r\n        if (process.env.REACT_APP_DEFAULTAUTH === 'firebase') {\r\n            yield call(fireBaseBackend.logout);\r\n        }\r\n        yield put(logoutUserSuccess(true));\r\n    } catch (error) { }\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { user } }) {\r\n    try {\r\n        const email = user.email;\r\n        const password = user.password;\r\n        if(process.env.REACT_APP_DEFAULTAUTH === \"firebase\"){\r\n            const response = yield call(fireBaseBackend.registerUser, email, password);\r\n            yield put(registerUserSuccess(response));\r\n        } else {\r\n            const response = yield call(create, '/register', user);\r\n            yield put(registerUserSuccess(response));\r\n        }\r\n        \r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { email } }) {\r\n    try {\r\n        if(process.env.REACT_APP_DEFAULTAUTH === \"firebase\"){\r\n            const response = yield call(fireBaseBackend.forgetPassword, email);\r\n            if (response) {\r\n              yield put(\r\n                forgetPasswordSuccess(\r\n                  \"Reset link are sended to your mailbox, check there first\"\r\n                )\r\n              );\r\n            }\r\n        } else {\r\n            const response = yield call(create, '/forget-pwd', { email });\r\n            yield put(forgetPasswordSuccess(response));\r\n        }\r\n    } catch (error) {\r\n        yield put(apiError(error));\r\n    }\r\n}\r\n\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser),\r\n        fork(watchForgetPassword),\r\n    ]);\r\n}\r\n\r\nexport default authSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}