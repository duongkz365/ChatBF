{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), exports.calculateInitialState = exports.getIsStageContentPartial = exports.concatClassnames = void 0;\nvar elements_1 = require(\"./elements\"),\n  math_1 = require(\"./math\"),\n  concatClassnames = function () {\n    for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];\n    return t.filter(Boolean).join(\" \");\n  },\n  getIsStageContentPartial = (exports.concatClassnames = concatClassnames, function (t, e, i) {\n    return void 0 === e && (e = 0), void 0 === i && (i = 0), !(t = void 0 !== t && t) && i <= e;\n  }),\n  calculateInitialState = (exports.getIsStageContentPartial = getIsStageContentPartial, function (t, e, i) {\n    void 0 === i && (i = (0, elements_1.canUseDOM)());\n    var n,\n      a,\n      o = t.animationDuration,\n      o = void 0 === o ? 0 : o,\n      s = t.infinite,\n      s = void 0 !== s && s,\n      l = t.autoPlay,\n      l = void 0 !== l && l,\n      r = t.autoWidth,\n      r = void 0 !== r && r,\n      m = (0, elements_1.createClones)(t),\n      d = (0, elements_1.getTransitionProperty)(),\n      c = (0, elements_1.getItemsCount)(t),\n      u = (0, elements_1.getItemsOffset)(t),\n      f = (0, elements_1.getItemsInSlide)(c, t),\n      g = (0, math_1.getStartIndex)(t.activeIndex, c),\n      g = (0, math_1.getActiveIndex)({\n        startIndex: g,\n        itemsCount: c,\n        infinite: s\n      }),\n      S = (0, elements_1.getElementDimensions)(e).width,\n      I = (a = (e = (r ? (n = (e = (0, elements_1.createAutowidthTransformationSet)(e, S, s)).coords, a = e.content, e) : (n = (e = (0, elements_1.createDefaultTransformationSet)(m, S, f, s)).coords, a = e.content, e)).partial, a), (0, math_1.getItemCoords)(-f, n = n).position),\n      _ = (0, math_1.getSwipeLimitMin)({\n        itemsOffset: u,\n        transformationSet: n\n      }, t),\n      t = (0, math_1.getSwipeLimitMax)({\n        itemsCount: c,\n        itemsOffset: u,\n        itemsInSlide: f,\n        transformationSet: n\n      }, t),\n      h = (0, math_1.getSwipeShiftValue)(c, n);\n    return {\n      activeIndex: g,\n      autoWidth: r,\n      animationDuration: o,\n      clones: m,\n      infinite: s,\n      itemsCount: c,\n      itemsInSlide: f,\n      itemsOffset: u,\n      translate3d: (0, elements_1.getTranslate3dProperty)(g, {\n        itemsInSlide: f,\n        itemsOffset: u,\n        transformationSet: n,\n        autoWidth: r,\n        infinite: s\n      }),\n      stageWidth: S,\n      stageContentWidth: a,\n      initialStageHeight: 0,\n      isStageContentPartial: e,\n      isAutoPlaying: l,\n      isAutoPlayCanceledOnAction: !1,\n      transformationSet: n,\n      transition: d,\n      fadeoutAnimationIndex: null,\n      fadeoutAnimationPosition: null,\n      fadeoutAnimationProcessing: !1,\n      swipeLimitMin: _,\n      swipeLimitMax: t,\n      swipeAllowedPositionMax: I,\n      swipeShiftValue: h,\n      canUseDom: i\n    };\n  });\nexports.calculateInitialState = calculateInitialState;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}