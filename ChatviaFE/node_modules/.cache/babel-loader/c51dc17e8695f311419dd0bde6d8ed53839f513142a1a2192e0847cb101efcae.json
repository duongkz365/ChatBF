{"ast":null,"code":"import firebase from 'firebase/compat/app';\n// Add the Firebase products that you want to use\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    /**\n     * Registers the user with given details\n     */\n    this.registerUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    /**\n     * Login user with given details\n     */\n    this.loginUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    /**\n     * forget Password user with given details\n     */\n    this.forgetPassword = email => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().sendPasswordResetEmail(email, {\n          url: window.location.protocol + \"//\" + window.location.host + \"/login\"\n        }).then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    /**\n     * Logout the user\n     */\n    this.logout = () => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signOut().then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    this.setLoggeedInUser = user => {\n      localStorage.setItem(\"authUser\", JSON.stringify(user));\n    };\n    /**\n     * Returns the authenticated user\n     */\n    this.getAuthenticatedUser = () => {\n      if (!localStorage.getItem('authUser')) return null;\n      return JSON.parse(localStorage.getItem('authUser'));\n    };\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          localStorage.setItem(\"authUser\", JSON.stringify(user));\n        } else {\n          localStorage.removeItem('authUser');\n        }\n      });\n    }\n  }\n  /**\n   * Handle the error\n   * @param {*} error \n   */\n  _handleError(error) {\n    // var errorCode = error.code;\n    var errorMessage = error.message;\n    return errorMessage;\n  }\n}\nlet _fireBaseBackend = null;\n\n/**\n * Initilize the backend\n * @param {*} config \n */\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config);\n  }\n  return _fireBaseBackend;\n};\n\n/**\n * Returns the firebase backend\n */\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend;\n};\nexport { initFirebaseBackend, getFirebaseBackend };","map":{"version":3,"names":["firebase","FirebaseAuthBackend","constructor","firebaseConfig","registerUser","email","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","user","currentUser","error","_handleError","loginUser","signInWithEmailAndPassword","forgetPassword","sendPasswordResetEmail","url","window","location","protocol","host","catch","logout","signOut","setLoggeedInUser","localStorage","setItem","JSON","stringify","getAuthenticatedUser","getItem","parse","initializeApp","onAuthStateChanged","removeItem","errorMessage","message","_fireBaseBackend","initFirebaseBackend","config","getFirebaseBackend"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/helpers/firebase.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\n// Add the Firebase products that you want to use\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\n\nclass FirebaseAuthBackend {\n    constructor(firebaseConfig) {\n        if (firebaseConfig) {\n            // Initialize Firebase\n            firebase.initializeApp(firebaseConfig);\n            firebase.auth().onAuthStateChanged((user) => {\n                if (user) {\n                    localStorage.setItem(\"authUser\", JSON.stringify(user));\n                } else {\n                    localStorage.removeItem('authUser');\n                }\n            });\n        }\n    }\n\n    /**\n     * Registers the user with given details\n     */\n    registerUser = (email, password) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().createUserWithEmailAndPassword(email, password).then((user) => {\n                resolve(firebase.auth().currentUser);\n            }, (error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n    /**\n     * Login user with given details\n     */\n    loginUser = (email, password) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().signInWithEmailAndPassword(email, password).then((user) => {\n                resolve(firebase.auth().currentUser);\n            }, (error) => {\n                reject(this._handleError(error));\n            });\n        });\n    }\n\n    /**\n     * forget Password user with given details\n     */\n    forgetPassword = (email) => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().sendPasswordResetEmail(email, { url: window.location.protocol + \"//\" + window.location.host + \"/login\" }).then(() => {\n                resolve(true);\n            }).catch((error) => {\n                reject(this._handleError(error));\n            })\n        });\n    }\n\n    /**\n     * Logout the user\n     */\n    logout = () => {\n        return new Promise((resolve, reject) => {\n            firebase.auth().signOut().then(() => {\n                resolve(true);\n            }).catch((error) => {\n                reject(this._handleError(error));\n            })\n        });\n    }\n\n    setLoggeedInUser = (user) => {\n        localStorage.setItem(\"authUser\", JSON.stringify(user));\n    }\n\n    /**\n     * Returns the authenticated user\n     */\n    getAuthenticatedUser = () => {\n        if (!localStorage.getItem('authUser'))\n            return null;\n        return JSON.parse(localStorage.getItem('authUser'));\n    }\n\n    /**\n     * Handle the error\n     * @param {*} error \n     */\n    _handleError(error) {\n        // var errorCode = error.code;\n        var errorMessage = error.message;\n        return errorMessage;\n    }\n}\n\n\nlet _fireBaseBackend = null;\n\n/**\n * Initilize the backend\n * @param {*} config \n */\nconst initFirebaseBackend = (config) => {\n    if (!_fireBaseBackend) {\n        _fireBaseBackend = new FirebaseAuthBackend(config);\n    }\n    return _fireBaseBackend;\n}\n\n/**\n * Returns the firebase backend\n */\nconst getFirebaseBackend = () => {\n    return _fireBaseBackend;\n}\n\nexport { initFirebaseBackend, getFirebaseBackend };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}