{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { fetchConversationSuccess, fetchConversationFailure } from './action';\nimport { getCookie } from './actionType';\nimport { FETCH_CONVERSATION_REQUEST } from './actionType';\n\n// Hàm gọi API lấy danh sách cuộc trò chuyện\nfunction* fetchConversations() {\n  try {\n    const response = yield call(fetch, 'https://localhost:7266/api/Conversation/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getCookie(\"token\")}`\n      },\n      body: JSON.stringify()\n    });\n    const data = yield response.json();\n    yield put(fetchConversationSuccess(data));\n  } catch (e) {\n    yield put(fetchConversationFailure(e.message));\n  }\n}\n\n// Watcher Saga\nexport function* watchFetchConversations() {\n  yield takeLatest(FETCH_CONVERSATION_REQUEST, fetchConversations);\n}","map":{"version":3,"names":["call","put","takeLatest","fetchConversationSuccess","fetchConversationFailure","getCookie","FETCH_CONVERSATION_REQUEST","fetchConversations","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","e","message","watchFetchConversations"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/redux/conversation/saga.js"],"sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    fetchConversationSuccess,\r\n    fetchConversationFailure,\r\n} from './action';\r\nimport { getCookie } from './actionType';\r\nimport { FETCH_CONVERSATION_REQUEST } from './actionType';\r\n\r\n// Hàm gọi API lấy danh sách cuộc trò chuyện\r\nfunction* fetchConversations() {\r\n    try {\r\n        const response = yield call(fetch, 'https://localhost:7266/api/Conversation/', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${getCookie(\"token\")}`,\r\n            },\r\n            body: JSON.stringify(),\r\n        });\r\n    \r\n        const data = yield response.json();\r\n        yield put(fetchConversationSuccess(data));\r\n      }catch(e){\r\n        yield put(fetchConversationFailure(e.message));\r\n      }\r\n}\r\n\r\n// Watcher Saga\r\nexport function* watchFetchConversations() {\r\n    yield takeLatest(FETCH_CONVERSATION_REQUEST, fetchConversations);\r\n}\r\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,SACIC,wBAAwB,EACxBC,wBAAwB,QACrB,UAAU;AACjB,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,0BAA0B,QAAQ,cAAc;;AAEzD;AACA,UAAUC,kBAAkBA,CAAA,EAAG;EAC3B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACS,KAAK,EAAE,0CAA0C,EAAE;MAC3EC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASP,SAAS,CAAC,OAAO,CAAE;MAChD,CAAC;MACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;IACzB,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClC,MAAMhB,GAAG,CAACE,wBAAwB,CAACa,IAAI,CAAC,CAAC;EAC3C,CAAC,QAAME,CAAC,EAAC;IACP,MAAMjB,GAAG,CAACG,wBAAwB,CAACc,CAAC,CAACC,OAAO,CAAC,CAAC;EAChD;AACN;;AAEA;AACA,OAAO,UAAUC,uBAAuBA,CAAA,EAAG;EACvC,MAAMlB,UAAU,CAACI,0BAA0B,EAAEC,kBAAkB,CAAC;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}