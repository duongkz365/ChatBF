{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport { fetchProfileSuccess, fetchProfileFailure, loginProfileSuccess, loginProfileFailure, logoutProfileFailure, logoutProfileSuccess, fetchOtherProfileSuccess } from \"./actions\";\nimport { FETCH_PROFILE_REQUEST, LOGIN_PROFILE_REQUEST, REGISTER_PROFILE_REQUEST, LOGOUT_PROFILE_REQUEST, FETCH_OTHER_PROFILE_REQUEST, getCookie, FORGET_PASSWORD_REQUEST } from \"../actionTypes\";\nimport axios from \"axios\";\n\n// FETCH PROFILE\n\nfunction* fetchProfile() {\n  try {\n    const response = yield call(fetch, \"https://localhost:7098/api/User\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${getCookie(\"token\")}`\n      },\n      body: JSON.stringify()\n    });\n    const data = yield response.json();\n    yield put(fetchProfileSuccess(data));\n  } catch (e) {\n    yield put(fetchProfileFailure(e.message));\n  }\n}\n\n// FETCH OTHER PROFILE\n\nfunction* fetchOtherProfile({\n  payload: {\n    id\n  }\n}) {\n  yield console.log(\"Sagaa id: \", id);\n  try {\n    const response = yield call(fetch, \"https://localhost:7098/api/User/profile\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    });\n    const data = yield response.json();\n    yield console.log(data);\n    yield put(fetchOtherProfileSuccess(data));\n  } catch (e) {\n    // yield put(fetchProfileFailure(e.message));\n    yield console.log(\"fail\");\n  }\n}\n\n// LOGIN PROFILE\n\nfunction* loginProfile({\n  payload: {\n    userName,\n    passwordHash\n  }\n}) {\n  try {\n    const response = yield call(fetch, \"https://localhost:7098/api/User/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userName,\n        passwordHash\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = yield response.json();\n    document.cookie = `token=${data.token}; path=/; max-age=${4320 * 60}`;\n    yield put(loginProfileSuccess(data.token));\n    window.location.href = \"/dashboard\";\n  } catch (e) {\n    console.log(e.message);\n    yield put(loginProfileFailure(e.message));\n  }\n}\n\n// REGISTER PROFILE\n\nfunction* registerProfile({\n  payload: {\n    userName,\n    passwordHash,\n    email\n  }\n}) {\n  try {\n    const response = yield call(fetch, \"https://localhost:7098/api/User/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userName,\n        passwordHash,\n        email\n      })\n    });\n    if (!response.ok) {\n      const error = yield response.json();\n      alert(error.message);\n    } else {\n      const notification = yield response.json();\n      alert(notification.message);\n      if (notification.message === \"USER REGISTERED SUCCESSFULLY!\") yield call(loginProfile, {\n        payload: {\n          userName,\n          passwordHash\n        }\n      });\n    }\n  } catch (error) {}\n}\n\n// LOGOUT PROFILE\n\nfunction* logoutProfile() {\n  try {\n    document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\"; // DELETE TOKEN\n    yield put(logoutProfileSuccess(true));\n    window.location.href = \"/\";\n  } catch (e) {\n    yield put(logoutProfileFailure(e.message));\n  }\n}\nfunction* forgetPassword({\n  payload: {\n    email\n  }\n}) {\n  yield console.log(email);\n  try {\n    const response = yield call(fetch, \"https://localhost:7098/api/User/forget\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = yield response.json();\n    alert(\"PLEASE VISIT EMAIL FORGET\");\n    window.location.href = \"/login\";\n  } catch (e) {}\n}\nexport function* watchFetchProfile() {\n  yield all([takeLatest(FETCH_PROFILE_REQUEST, fetchProfile), takeLatest(LOGIN_PROFILE_REQUEST, loginProfile), takeLatest(REGISTER_PROFILE_REQUEST, registerProfile), takeLatest(LOGOUT_PROFILE_REQUEST, logoutProfile), takeLatest(FETCH_OTHER_PROFILE_REQUEST, fetchOtherProfile), takeLatest(FORGET_PASSWORD_REQUEST, forgetPassword)]);\n}","map":{"version":3,"names":["call","put","takeLatest","all","fetchProfileSuccess","fetchProfileFailure","loginProfileSuccess","loginProfileFailure","logoutProfileFailure","logoutProfileSuccess","fetchOtherProfileSuccess","FETCH_PROFILE_REQUEST","LOGIN_PROFILE_REQUEST","REGISTER_PROFILE_REQUEST","LOGOUT_PROFILE_REQUEST","FETCH_OTHER_PROFILE_REQUEST","getCookie","FORGET_PASSWORD_REQUEST","axios","fetchProfile","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","e","message","fetchOtherProfile","payload","id","console","log","loginProfile","userName","passwordHash","ok","Error","status","document","cookie","token","window","location","href","registerProfile","email","error","alert","notification","logoutProfile","forgetPassword","watchFetchProfile"],"sources":["C:/Users/Administrator/Desktop/ChatBF/ChatviaFE/src/redux/profile/sagas.js"],"sourcesContent":["import { call, put, takeLatest, all } from \"redux-saga/effects\";\r\nimport {\r\n  fetchProfileSuccess,\r\n  fetchProfileFailure,\r\n  loginProfileSuccess,\r\n  loginProfileFailure,\r\n  logoutProfileFailure,\r\n  logoutProfileSuccess,\r\n  fetchOtherProfileSuccess\r\n} from \"./actions\";\r\nimport {\r\n  FETCH_PROFILE_REQUEST,\r\n  LOGIN_PROFILE_REQUEST,\r\n  REGISTER_PROFILE_REQUEST,\r\n  LOGOUT_PROFILE_REQUEST,\r\n  FETCH_OTHER_PROFILE_REQUEST,\r\n  getCookie,\r\n  FORGET_PASSWORD_REQUEST,\r\n} from \"../actionTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// FETCH PROFILE\r\n\r\nfunction* fetchProfile() {\r\n  try {\r\n    const response = yield call(fetch, \"https://localhost:7098/api/User\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getCookie(\"token\")}`,\r\n      },\r\n      body: JSON.stringify(),\r\n    });\r\n    const data = yield response.json();\r\n    yield put(fetchProfileSuccess(data));\r\n  } catch (e) {\r\n    yield put(fetchProfileFailure(e.message));\r\n  }\r\n}\r\n\r\n// FETCH OTHER PROFILE\r\n\r\n\r\nfunction* fetchOtherProfile({payload:{id}}) {\r\n  yield console.log(\"Sagaa id: \", id)\r\n  try {\r\n    const response = yield call(fetch, \"https://localhost:7098/api/User/profile\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ id: id }),\r\n    });\r\n    const data = yield response.json();\r\n\r\n    yield console.log(data)\r\n    yield put(fetchOtherProfileSuccess(data))\r\n  } catch (e) {\r\n    // yield put(fetchProfileFailure(e.message));\r\n    yield console.log(\"fail\")\r\n  }\r\n}\r\n\r\n// LOGIN PROFILE\r\n\r\nfunction* loginProfile({ payload: { userName, passwordHash } }) {\r\n\r\n  \r\n  try {\r\n   \r\n    const response = yield call(fetch, \"https://localhost:7098/api/User/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ userName, passwordHash }),\r\n    });\r\n    if (!response.ok) {\r\n      \r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n\r\n\r\n    const data = yield response.json();\r\n    document.cookie = `token=${data.token}; path=/; max-age=${4320 * 60}`;\r\n    yield put(loginProfileSuccess(data.token));\r\n    window.location.href = \"/dashboard\";\r\n  } catch (e) {\r\n    console.log(e.message)\r\n    yield put(loginProfileFailure(e.message));\r\n  }\r\n}\r\n\r\n// REGISTER PROFILE\r\n\r\nfunction* registerProfile({ payload: { userName, passwordHash, email } }) {\r\n  try {\r\n    const response = yield call(\r\n      fetch,\r\n      \"https://localhost:7098/api/User/register\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userName, passwordHash, email }),\r\n      }\r\n    );\r\n    \r\n    if(!response.ok){\r\n      const error = yield response.json();\r\n      alert(error.message); \r\n    }else {\r\n      const notification = yield response.json();\r\n      alert(notification.message);\r\n      \r\n      if(notification.message === \"USER REGISTERED SUCCESSFULLY!\" )\r\n      yield call(loginProfile, { payload: { userName, passwordHash} })\r\n    }\r\n  } catch (error) {}\r\n}\r\n\r\n\r\n// LOGOUT PROFILE\r\n\r\nfunction* logoutProfile() {\r\n  try {\r\n    document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\"; // DELETE TOKEN\r\n    yield put(logoutProfileSuccess(true));\r\n    window.location.href = \"/\";\r\n  } catch (e) {\r\n    yield put(logoutProfileFailure(e.message));\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction* forgetPassword({ payload: { email } }) {\r\n\r\n  yield console.log(email)\r\n\r\n  try {\r\n    const response = yield call(\r\n          fetch,\r\n          \"https://localhost:7098/api/User/forget\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email }),\r\n          }\r\n        );\r\n        const data = yield response.json();\r\n        alert(\"PLEASE VISIT EMAIL FORGET\")\r\n        window.location.href = \"/login\";\r\n  }catch(e){\r\n\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport function* watchFetchProfile() {\r\n  yield all([\r\n    takeLatest(FETCH_PROFILE_REQUEST, fetchProfile),\r\n    takeLatest(LOGIN_PROFILE_REQUEST, loginProfile),\r\n    takeLatest(REGISTER_PROFILE_REQUEST, registerProfile),\r\n    takeLatest(LOGOUT_PROFILE_REQUEST, logoutProfile),\r\n    takeLatest(FETCH_OTHER_PROFILE_REQUEST, fetchOtherProfile),\r\n    takeLatest(FORGET_PASSWORD_REQUEST, forgetPassword)\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}