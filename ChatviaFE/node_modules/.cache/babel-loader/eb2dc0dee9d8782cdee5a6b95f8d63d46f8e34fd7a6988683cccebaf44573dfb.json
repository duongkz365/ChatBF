{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Chatvia_React_v2.3.0\\\\Chatvia\\\\src\\\\routes\\\\index.js\";\nimport React, { Suspense } from 'react';\nimport { Routes as SwitchRoute, Route, Navigate } from 'react-router-dom';\n\n//import routes\nimport { authProtectedRoutes, publicRoutes } from './routes';\nimport PrivateRoute from '../components/PrivateRoute';\nimport AdminRoutes from 'AdminRoutes';\n//import layouts\nimport NonAuthLayout from \"../layouts/NonAuth\";\nimport AuthLayout from \"../layouts/AuthLayout/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthProtected = props => {\n  /*\n    Navigate is un-auth access protected routes via url\n    */\n\n  if (props.isAuthProtected && !localStorage.getItem(\"authUser\")) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.children\n  }, void 0, false);\n};\n\n/**\n * Main Route component\n */\n_c = AuthProtected;\nconst Routes = () => {\n  return (\n    /*#__PURE__*/\n    // rendering the router with layout\n    _jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(SwitchRoute, {\n          children: [publicRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            element: route.component\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin/*\",\n            element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n              children: /*#__PURE__*/_jsxDEV(AdminRoutes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this), authProtectedRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            element: route.component\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)), publicRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            layout: NonAuthLayout,\n            element: /*#__PURE__*/_jsxDEV(NonAuthLayout, {\n              children: route.component\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this),\n            isAuthProtected: false\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)), authProtectedRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            layout: AuthLayout,\n            element: /*#__PURE__*/_jsxDEV(AuthProtected, {\n              isAuthProtected: true,\n              children: /*#__PURE__*/_jsxDEV(AuthLayout, {\n                children: route.component\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this),\n            isAuthProtected: true\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  );\n};\n_c2 = Routes;\nexport default Routes;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProtected\");\n$RefreshReg$(_c2, \"Routes\");","map":{"version":3,"names":["React","Suspense","Routes","SwitchRoute","Route","Navigate","authProtectedRoutes","publicRoutes","PrivateRoute","AdminRoutes","NonAuthLayout","AuthLayout","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthProtected","props","isAuthProtected","localStorage","getItem","to","pathname","state","from","location","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","fallback","map","route","idx","path","element","component","layout","_c2","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Chatvia_React_v2.3.0/Chatvia/src/routes/index.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport { Routes as SwitchRoute, Route, Navigate } from 'react-router-dom';\n\n//import routes\nimport { authProtectedRoutes, publicRoutes } from './routes';\nimport PrivateRoute from '../components/PrivateRoute';\nimport AdminRoutes from 'AdminRoutes';\n//import layouts\nimport NonAuthLayout from \"../layouts/NonAuth\";\nimport AuthLayout from \"../layouts/AuthLayout/\";\n\nconst AuthProtected = (props) => {\n    /*\n      Navigate is un-auth access protected routes via url\n      */\n  \n      if (props.isAuthProtected && !localStorage.getItem(\"authUser\")) {\n            return (\n                <Navigate to={{ pathname: \"/login\", state: { from: props.location } }} />\n            );\n        }\n  \n    return <>{props.children}</>;\n  };\n\n/**\n * Main Route component\n */\nconst Routes = () => {\n\n    return (\n        // rendering the router with layout\n            <React.Fragment>\n            <Suspense fallback = {<div></div>} >\n                <SwitchRoute>\n                    {/* Public and auth-protected routes */}\n        {publicRoutes.map((route, idx) => (\n          <Route \n            path={route.path} \n            element={route.component} \n            key={idx} \n          />\n        ))}\n        \n        {/* Admin routes (protected) */}\n        <Route path=\"/admin/*\" element={\n          <PrivateRoute>\n            <AdminRoutes />\n          </PrivateRoute>\n        } />\n        \n        {/* Other auth-protected routes */}\n        {authProtectedRoutes.map((route, idx) => (\n          <Route \n            path={route.path} \n            element={route.component} \n            key={idx} \n          />\n        ))}\n                    {/* public routes */}\n                    {publicRoutes.map((route, idx) =>\n                        <Route \n                            path={route.path} \n                            layout={NonAuthLayout} \n                            element={\n                                <NonAuthLayout>\n                                    {route.component}\n                                </NonAuthLayout>\n                            }\n                            key={idx} \n                            isAuthProtected={false} \n                        />\n                    )}\n\n                    {/* private/auth protected routes */}\n                    {authProtectedRoutes.map((route, idx) =>\n                        <Route \n                            path={route.path} \n                            layout={AuthLayout} \n                            element={\n                                <AuthProtected isAuthProtected={true}>\n                                    <AuthLayout>{route.component}</AuthLayout>\n                                </AuthProtected>\n                            }\n                            key={idx} \n                            isAuthProtected={true}  />\n                    )}\n                   \n                </SwitchRoute>\n                </Suspense>\n            </React.Fragment>\n    );\n}\n\nexport default Routes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}